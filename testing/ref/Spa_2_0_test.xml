<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="Spa_2_0" soapui-version="2.0.2" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="ProjectSettings@projectRoot">C:\Assignments\DDT\vinaya\SVN\Spa\trunk\Spa_2_0\testing\ref-int</con:setting></con:settings><con:interface name="SpaBinding" bindingName="{http://soa.o2.co.uk/sdp/spaservice_2}SpaBinding" soapVersion="1_1" definition="file:C:\Documents and Settings\udaybhaskar_r\Desktop\Subscriber\NorthBoundInterfaces\spaservice_2_0.wsdl"><con:settings/><con:endpoints><con:endpoint>https://sdpapi.o2.co.uk/services/sdp/Spa_2_0</con:endpoint><con:endpoint>http://soaref.ref.o2.co.uk/services/sdp/Spa_2_0</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="getServiceProviderCategories" bindingOperationName="getServiceProviderCategories" inputName="getServiceProviderCategories" outputName="getServiceProviderCategoriesResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soaref.ref.o2.co.uk/services/sdp/Spa_2_0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spad="http://soa.o2.co.uk/sdp/spadata_2">
    <soap:Header xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
      <cor:applicationID xmlns:cor="http://soa.o2.co.uk/coredata_1">Subscriber_2_0</cor:applicationID>
      <cor:providerID xmlns:cor="http://soa.o2.co.uk/coredata_1">O2</cor:providerID>
      <cor:SOATransactionID xmlns:cor="http://soa.o2.co.uk/coredata_1"></cor:SOATransactionID>
   </soap:Header>
   <soapenv:Body>
      <spad:getServiceProviderCategories>
         <!--type: msisdnType-->
         <spad:msisdn>447843275471</spad:msisdn>
      </spad:getServiceProviderCategories>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call><con:call name="Request 2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soaref.ref.o2.co.uk/services/sdp/Spa_2_0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spad="http://soa.o2.co.uk/sdp/spadata_2">
   <soapenv:Header/>
   <soapenv:Body>
      <spad:getServiceProviderCategories>
         <!--type: msisdnType-->
         <spad:msisdn>447843275471</spad:msisdn>
      </spad:getServiceProviderCategories>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="getServiceProviderDetails" bindingOperationName="getServiceProviderDetails" inputName="getServiceProviderDetails" outputName="getServiceProviderDetailsResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soaref.ref.o2.co.uk/services/sdp/Spa_2_0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spad="http://soa.o2.co.uk/sdp/spadata_2">
   <soapenv:Header/>
   <soapenv:Body>
      <spad:getServiceProviderDetails>
         <!--type: msisdnType-->
         <spad:msisdn>447843275471</spad:msisdn>
      </spad:getServiceProviderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:definitionCache rootPart="file:C:\Documents and Settings\udaybhaskar_r\Desktop\Subscriber\NorthBoundInterfaces\spaservice_2_0.wsdl" type="TEXT"><con:part><con:url>file:C:\Documents and Settings\udaybhaskar_r\Desktop\Subscriber\NorthBoundInterfaces\coredata_1_1.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 (http://www.altova.com) by Kapil Gosain (THBS)-->
<xsd:schema targetNamespace="http://soa.o2.co.uk/coredata_1" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xcore="http://soa.o2.co.uk/coredata_1">
  <xsd:complexType name="SOAFaultType">
    <xsd:annotation>
      <xsd:documentation>The type of the response sent to the calling application, if something goes wrong.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="xcore:SOAFaultOriginator"/>
      <xsd:element ref="xcore:SOAFaultCode"/>
      <xsd:element name="faultDescription" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>A human readable description of the error.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="faultTrace" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>A computer generated dump of the fault (may help in debugging problems).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xcore:SOATransactionID" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SOAFault" type="xcore:SOAFaultType">
    <xsd:annotation>
      <xsd:documentation>The response sent to the calling application, if something goes wrong.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SOAFaultCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>A numeric representation of a fault (should be included in errors.xml).</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SOAFaultOriginator" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>A representation of where a fault originates (should be included in errors.xml).</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SOATransactionID" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>The transaction ID generated by the ESB.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SOAConsumerTransactionID" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>A transaction ID supplied by the calling aplication. It will not be processed but is passed through and logged by all underlying services (aids in debugging problems).</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="msisdnType">
    <xsd:annotation>
      <xsd:documentation>Mobile Phone numbers (MSISDNs) should always be defined as strings, including country codes i.e. "447734123456"; and translated into localised formats on the presentation and backend layers.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="billingAccountNumberType">
    <xsd:annotation>
      <xsd:documentation>A billing account, as it appears in the back end billing system (Companion).</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="6"/>
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="portalIDType">
    <xsd:annotation>
      <xsd:documentation>A portal account, normally in the form "john.smith@o2.co.uk".</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="accountType">
    <xsd:annotation>
      <xsd:documentation>Data type to define a customers account. This could be either a portal account, msisdn, or a companion account and msisdn. Or a Bank Account program ID and account ID (initially for Timberlake)</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="portalID" type="xcore:portalIDType">
        <xsd:annotation>
          <xsd:documentation>A portal account, normally in the form "john.smith@o2.co.uk".</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="msisdn" type="xcore:msisdnType">
        <xsd:annotation>
          <xsd:documentation>A msisdn, in international format i.e. "447712345678"</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="accountDetail" type="xcore:accountDetail">
        <xsd:annotation>
          <xsd:documentation>Account Details</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="accountDetail">
    <xsd:annotation>
      <xsd:documentation>Account Details</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="billingAccountType">
        <xsd:annotation>
          <xsd:documentation>The type of account as it is defined in the billing system (only "MOBILE" currently defined).</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="MOBILE"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="accountNumber" type="xcore:billingAccountNumberType">
        <xsd:annotation>
          <xsd:documentation>The companion account.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="msisdn" type="xcore:msisdnType">
        <xsd:annotation>
          <xsd:documentation>The msisdn within the above account.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="customerIDType">
    <xsd:annotation>
      <xsd:documentation>Main customerID for online services - this is the o2BFid in CPDS at the moment</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="cashCardAccountType">
    <xsd:annotation>
      <xsd:documentation>Uniquely identifies the account in the Prepaid Banking system that is being referred to.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:annotation>
        <xsd:documentation>Financial accounts need a programID and accountID (Ref: Timberlake)</xsd:documentation>
      </xsd:annotation>
      <xsd:element name="programID" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>Identifies program. Translates into "Smart" or "Freedom" with various limits</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="accountID" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>Unique internal account ID on the TSYS platform. Probably can be applied to other banking systems as well.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="userID" type="xsd:long" minOccurs="0"/>
      <xsd:element name="cardID" type="xsd:long" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="productIDType">
    <xsd:annotation>
      <xsd:documentation>Identifies a product - temporarily the same as o2BFID (and hence customer ID)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="customerRoleType">
    <xsd:annotation>
      <xsd:documentation>The role concept from registration DB or A and R</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="admin"/>
      <xsd:enumeration value="user"/>
      <xsd:enumeration value="chooser"/>
      <xsd:enumeration value="superuser"/>
      <xsd:enumeration value="unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="imsiType">
    <xsd:annotation>
      <xsd:documentation>IMSI Number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="imeiType">
    <xsd:annotation>
      <xsd:documentation>IMEI Number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:element name="subscriberProfile" type="xcore:SubscriberProfileType">
    <xsd:annotation>
      <xsd:documentation>Subscriber Profile Element</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="SubscriberProfileType">
    <xsd:annotation>
      <xsd:documentation>Complex Type that defines Subscriber Profile</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="xcore:SubscriberID">
        <xsd:annotation>
          <xsd:documentation>This refers to the MSISDN for Mobile subscribers</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xcore:Operator" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Operator ID for the particular subscriber</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xcore:PaymentCategory" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Type of payment, Prepay of Postpay</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xcore:Segment" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Segment of Subscriber, corporate, consumer, ISP etc.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="channel" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ServiceProviderID" type="xsd:long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>SPID which is a unique value for the type of O2 Service Provider like Tesco, CPW etc.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Status" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Operator" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>O2 UK, Tesco or Other normally</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Segment" type="xcore:SegmentType">
    <xsd:annotation>
      <xsd:documentation>The P and L definition of Consumer/SME/Corp</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="SegmentType">
    <xsd:annotation>
      <xsd:documentation>main ones listed - could be others</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Consumer"/>
      <xsd:enumeration value="SME"/>
      <xsd:enumeration value="Corporate"/>
      <xsd:enumeration value="ISP"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="Channel" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>The sales channel that owns the subscriber</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SubscriberID" type="xcore:msisdnType">
    <xsd:annotation>
      <xsd:documentation>Subscriber ID that is unique identifier of the subscriber eg: MSISDN no is subscriberID for Mobile users</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PaymentCategory" type="xcore:PaymentCategoryType">
    <xsd:annotation>
      <xsd:documentation>Divides between pay and go/pay monthly</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="PaymentCategoryType">
    <xsd:annotation>
      <xsd:documentation>two values postpay or prepay</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Prepay"/>
      <xsd:enumeration value="Postpay"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="ServiceResultType">
    <xsd:annotation>
      <xsd:documentation>This data type represents the status recieved from a service for a task that might be earlier assigned to that service.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="statusCode" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>A unique code assigned to the status from the service. A set of status codes can be defined for services based on the context.
				                   A stausCode will be suffixed with "S" for success, "F" for failure and "E" for Error and "P" for Pending to describe the type of status recieved from service.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="externalDescription" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>A description of status in human-readble form that has to be sent to the end-user.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="internalDescription" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>This is an optional description of the status which is meant for logging purpose. This may contain the java stack trace or Database error trace based on the context.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MapItem">
    <xsd:annotation>
      <xsd:documentation>An individual Item that carries key-value pair for extensible properties</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="key" type="xsd:string"/>
      <xsd:choice>
        <xsd:annotation>
          <xsd:documentation>Only the relevant elemt is populated based on the type of the parameter.</xsd:documentation>
        </xsd:annotation>
        <xsd:element name="intValue" type="xsd:integer"/>
        <xsd:element name="strValue" type="xsd:string"/>
        <xsd:element name="boolValue" type="xsd:boolean"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MapType">
    <xsd:annotation>
      <xsd:documentation>A generic extensible complex type that can be used to send multiple name-value pairs</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="mapItem" type="xcore:MapItem" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="StatusCodeType">
    <xsd:annotation>
      <xsd:documentation>This is borrowed from SPML definition of a status code - the pending status is  a bit debatable</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="success"/>
      <xsd:enumeration value="failure"/>
      <xsd:enumeration value="error"/>
      <xsd:enumeration value="pending"/>
      <xsd:enumeration value="expired"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="applicationID" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>applicationID is part of request identifier handled by SOA Access Gateway. Application ID uniquely identifies the name of consuming application. Example - DASHB, IVR, WAP, etc</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="providerID" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>providerID is also part of request identifier handled by SOA Access Gateway. Provider ID identifies the company that provides a functionality to end customers by invoking this specific service. Example - O2, Tesco, Car Phone Warehouse</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="originatorIP" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>This parameter indicates the IP address of the originating system. This parameter will be added by the SOA Access Gateway</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="mobileAccessIdType">
    <xsd:annotation>
      <xsd:documentation>Mobile Access Id is Hash id which is same as the UID generated by Wap Gateway</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:element name="debugFlag" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>This parameter indicates whether we should log or not, Used for debugging perspective from a Support Perspective.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:C:\Documents and Settings\udaybhaskar_r\Desktop\Subscriber\NorthBoundInterfaces\spadata_2_0.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://soa.o2.co.uk/sdp/spadata_2" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xcore="http://soa.o2.co.uk/coredata_1" xmlns:sad="http://soa.o2.co.uk/sdp/spadata_2">
  <xsd:import namespace="http://soa.o2.co.uk/coredata_1" schemaLocation="coredata_1_1.xsd"/>
  <xsd:element name="getServiceProviderDetails" type="sad:getServiceProviderDetails">
    <xsd:annotation>
      <xsd:documentation>Request to get the service provider details</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="getServiceProviderDetails">
    <xsd:annotation>
      <xsd:documentation>Request to get the service provider details</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="msisdn" type="xcore:msisdnType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getServiceProviderDetailsResponse" type="sad:getServiceProviderDetailsResponse">
    <xsd:annotation>
      <xsd:documentation>Service provider details Response</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="getServiceProviderDetailsResponse">
    <xsd:annotation>
      <xsd:documentation>Service provider details Response</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="code" type="xsd:string"/>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="paymentType" type="xsd:string"/>
      <xsd:element name="operatorID" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getServiceProviderDetailsFault" type="xcore:SOAFaultType">
    <xsd:annotation>
      <xsd:documentation>Service provider details Fault</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getServiceProviderCategories" type="sad:getServiceProviderCategories">
    <xsd:annotation>
      <xsd:documentation>Request to get the service provider categories details</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="getServiceProviderCategories">
    <xsd:annotation>
      <xsd:documentation>Request to get the service provider categories details</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="msisdn" type="xcore:msisdnType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getServiceProviderCategoriesResponse" type="sad:getServiceProviderCategoriesResponse">
    <xsd:annotation>
      <xsd:documentation>Service provider categories Response</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="getServiceProviderCategoriesResponse">
    <xsd:annotation>
      <xsd:documentation>Service provider categories Response</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="code" type="xsd:string"/>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="spidDescription" type="xsd:string"/>
      <xsd:element name="spid" type="xsd:string"/>
      <xsd:element name="paymentType" type="xsd:string"/>
      <xsd:element name="barringCodes" type="xsd:string"/>
      <xsd:element name="category" type="xsd:string"/>
      <xsd:element name="status" type="xsd:string"/>
      <xsd:element name="operatorID" type="xsd:string"/>
      <xsd:element name="puk" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Personal Unblocking Key</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getServiceProviderCategoriesFault" type="xcore:SOAFaultType">
    <xsd:annotation>
      <xsd:documentation>Service provider categories Fault</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:C:\Documents and Settings\udaybhaskar_r\Desktop\Subscriber\NorthBoundInterfaces\spaservice_2_0.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SPA_2_0" targetNamespace="http://soa.o2.co.uk/sdp/spaservice_2" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:sad="http://soa.o2.co.uk/sdp/spadata_2" xmlns:sps="http://soa.o2.co.uk/sdp/spaservice_2">
  <wsdl:types>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://soa.o2.co.uk/sdp/spadata_2" schemaLocation="spadata_2_0.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="getServiceProviderDetails">
    <wsdl:part name="getServiceProviderDetails" element="sad:getServiceProviderDetails"/>
  </wsdl:message>
  <wsdl:message name="getServiceProviderDetailsResponse">
    <wsdl:part name="getServiceProviderDetailsResponse" element="sad:getServiceProviderDetailsResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceProviderDetailsFault">
    <wsdl:part name="getServiceProviderDetailsFault" element="sad:getServiceProviderDetailsFault"/>
  </wsdl:message>
  <wsdl:message name="getServiceProviderCategories">
    <wsdl:part name="getServiceProviderCategories" element="sad:getServiceProviderCategories"/>
  </wsdl:message>
  <wsdl:message name="getServiceProviderCategoriesResponse">
    <wsdl:part name="getServiceProviderCategoriesResponse" element="sad:getServiceProviderCategoriesResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceProviderCategoriesFault">
    <wsdl:part name="getServiceProviderCategoriesFault" element="sad:getServiceProviderCategoriesFault"/>
  </wsdl:message>
  <wsdl:portType name="SpaPort">
    <wsdl:operation name="getServiceProviderDetails">
      <wsdl:input name="getServiceProviderDetails" message="sps:getServiceProviderDetails"/>
      <wsdl:output name="getServiceProviderDetailsResponse" message="sps:getServiceProviderDetailsResponse"/>
      <wsdl:fault name="getServiceProviderDetailsFault" message="sps:getServiceProviderDetailsFault"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceProviderCategories">
      <wsdl:input name="getServiceProviderCategories" message="sps:getServiceProviderCategories"/>
      <wsdl:output name="getServiceProviderCategoriesResponse" message="sps:getServiceProviderCategoriesResponse"/>
      <wsdl:fault name="getServiceProviderCategoriesFault" message="sps:getServiceProviderCategoriesFault"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SpaBinding" type="sps:SpaPort">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getServiceProviderDetails">
      <soap:operation soapAction=""/>
      <wsdl:input name="getServiceProviderDetails">
        <soap:body parts="getServiceProviderDetails" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getServiceProviderDetailsResponse">
        <soap:body parts="getServiceProviderDetailsResponse" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="getServiceProviderDetailsFault">
        <soap:fault name="getServiceProviderDetailsFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceProviderCategories">
      <soap:operation soapAction=""/>
      <wsdl:input name="getServiceProviderCategories">
        <soap:body parts="getServiceProviderCategories" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getServiceProviderCategoriesResponse">
        <soap:body parts="getServiceProviderCategoriesResponse" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="getServiceProviderCategoriesFault">
        <soap:fault name="getServiceProviderCategoriesFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SpaService">
    <wsdl:port name="SpaPort" binding="sps:SpaBinding">
      <soap:address location="https://sdpapi.o2.co.uk/services/sdp/Spa_2_0"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache></con:interface><con:testSuite name="Spa_2_0:getServiceProviderDetails Test Suite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Success Case" searchProperties="true" id="301c157d-6581-41ec-8c81-94b67770c60f"><con:settings/><con:testStep type="request" name="Spa_gSPD_FT_0001"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpaBinding</con:interface><con:operation>getServiceProviderDetails</con:operation><con:request name="Spa_gSPD_FT_0001"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soaref.ref.o2.co.uk/services/sdp/Spa_2_0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spad="http://soa.o2.co.uk/sdp/spadata_2">
   <soap:Header xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
      <cor:applicationID xmlns:cor="http://soa.o2.co.uk/coredata_1">SPA_2_0</cor:applicationID>
      <cor:providerID xmlns:cor="http://soa.o2.co.uk/coredata_1">O2</cor:providerID>
      <cor:SOATransactionID xmlns:cor="http://soa.o2.co.uk/coredata_1">AAAAAAAA-BBBBB-CCCCCC-DDDDDDDD</cor:SOATransactionID>
   </soap:Header>
   <soapenv:Body>
      <spad:getServiceProviderDetails>
         <!--type: msisdnType-->
         <spad:msisdn>447703458536</spad:msisdn>
      </spad:getServiceProviderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="XPath Match"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace spad='http://soa.o2.co.uk/sdp/spadata_2';
//spad:getServiceProviderDetailsResponse</path><content><![CDATA[<spad:getServiceProviderDetailsResponse xmlns:spad="http://soa.o2.co.uk/sdp/spadata_2" xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <spad:code>SPA0000S</spad:code>
  <spad:description>The request is completed successfully</spad:description>
  <spad:paymentType>POSTPAY</spad:paymentType>
  <spad:operatorID>O2</spad:operatorID>
</spad:getServiceProviderDetailsResponse>]]></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/><con:tearDownScript/></con:testSuite><con:testSuite name="Spa_2_0:getServiceProviderCategories Test Suite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Success Case" searchProperties="true" id="a3d6d824-5f48-4e85-8917-cecefe0ff2b8"><con:settings/><con:testStep type="request" name="Spa_gSPC_Success"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpaBinding</con:interface><con:operation>getServiceProviderCategories</con:operation><con:request name="Spa_gSPC_Success"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soaref.ref.o2.co.uk/services/sdp/Spa_2_0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spad="http://soa.o2.co.uk/sdp/spadata_2">
   <soap:Header xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
      <cor:applicationID xmlns:cor="http://soa.o2.co.uk/coredata_1">SPA_2_0</cor:applicationID>
      <cor:providerID xmlns:cor="http://soa.o2.co.uk/coredata_1">O2</cor:providerID>
      <cor:SOATransactionID xmlns:cor="http://soa.o2.co.uk/coredata_1">AAAAAAAA-BBBBB-CCCCCC-DDDDDDDD</cor:SOATransactionID>
   </soap:Header>
   <soapenv:Body>
      <spad:getServiceProviderCategories>
         <!--type: msisdnType-->
         <spad:msisdn>447704881748</spad:msisdn>
      </spad:getServiceProviderCategories>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="XPath Match"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace spad='http://soa.o2.co.uk/sdp/spadata_2';
//spad:getServiceProviderCategoriesResponse</path><content><![CDATA[<spad:getServiceProviderCategoriesResponse xmlns:spad="http://soa.o2.co.uk/sdp/spadata_2" xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <spad:code>SPA0000S</spad:code>
  <spad:description>The request is completed successfully</spad:description>
  <spad:spidDescription>Tesco Prepay</spad:spidDescription>
  <spad:spid>416</spad:spid>
  <spad:paymentType>PREPAY</spad:paymentType>
  <spad:barringCodes/>
  <spad:category>MVNO TESCO</spad:category>
  <spad:status>A</spad:status>
  <spad:operatorID>O2</spad:operatorID>
  <spad:puk>1234</spad:puk>
</spad:getServiceProviderCategoriesResponse>]]></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/><con:tearDownScript/></con:testSuite><con:properties/><con:afterLoadScript/><con:wssContainer/></con:soapui-project>